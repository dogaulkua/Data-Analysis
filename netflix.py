# -*- coding: utf-8 -*-
"""Netflix.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DxqBUbWAdnSLRGei9mrd6cXKFuOMvHyX
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import warnings
warnings.filterwarnings('ignore')

netflix = pd.read_csv('/content/netflix_titles.csv')

netflix.head(5)

netflix.shape #kaç satır ve sütun var

netflix.columns #sütun isimleri

netflix.isnull().sum() #boş veriler bulunur

netflix.nunique() #tekrar etmeyen benzersiz verilere bakılır

data = netflix.copy()

data.shape

data = data.dropna() #eksik verileri temizledik

data.shape

colors = ["black", "red"]
plt.figure(figsize=(15, 6))
ax = sns.countplot(x='type', data=netflix, palette=colors)  # palette ile renkleri belirt
plt.title('Distribution of Movie and TV Show Types')
plt.show()

# İlk grafiği oluştur
plt.figure(figsize=(15,6))  # Figür boyutunu belirle
custom_colors = ["#FF0000", "#800000", "#B22222", "#FF7F7F", "#000000"]  # İstediğiniz renkleri tanımlayın
ax = sns.countplot(netflix["rating"], palette=custom_colors) # Grafiği oluştur ve ax objesine ata
# X ekseni etiketlerini döndür
ax.set_xticklabels(ax.get_xticklabels(), rotation=360)  # 45 derece döndürme yapılabilir
# Grafiği göster
plt.show()

plt.figure(figsize=(15,6))
sns.countplot(x = "rating", hue = "type", data = netflix, color = "Red")
plt.title("Rate of Type and Rating")
plt.show()

labels = ["Movie", "TV Show"]
sizes = [netflix["type"].value_counts()[0], netflix["type"].value_counts()[1]]
colors = ["black", "red"]
plt.pie(sizes, labels=labels, autopct='%1.1f%%', colors=colors)  # colors parametresini ekleyin
plt.title('Movie and TV Show')
plt.show()

custom_colors = ["#FF0000", "#800000", "#B22222", "#FF7F7F", "#000000"]
netflix["rating"].value_counts().plot.pie(autopct="%.1f%%",figsize=(10,10), shadow=True, colors =custom_colors)
plt.show()

pip install WordCloud

from wordcloud import WordCloud

# 'data.country' üzerindeki float ve NaN değerlerini temizle
cleaned_country_data = data['country'].dropna().astype(str)

# Figür boyutunu ayarlayın
plt.subplots(figsize=(25, 15))

# Kelime bulutunu oluşturun
wordcloud = WordCloud(
    background_color="white",
    width=1920,
    height=1080
).generate(" ".join(cleaned_country_data))  # Temizlenmiş verileri kullan

# Kelime bulutunu görselleştir
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")  # Eksenleri kapat
plt.savefig("country.png")  # Görseli kaydet
plt.show()  # Görseli göster

# 'data.country' üzerindeki float ve NaN değerlerini temizle
cleaned_cast_data = data['cast'].dropna().astype(str)

# Figür boyutunu ayarlayın
plt.subplots(figsize=(25, 15))

# Kelime bulutunu oluşturun
wordcloud = WordCloud(
    background_color="white",
    width=1920,
    height=1080
).generate(" ".join(cleaned_cast_data))  # Temizlenmiş verileri kullan

# Kelime bulutunu görselleştir
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")  # Eksenleri kapat
plt.savefig("cast.png")  # Görseli kaydet
plt.show()  # Görseli göster

# 'data.country' üzerindeki float ve NaN değerlerini temizle
cleaned_director_data = data['director'].dropna().astype(str)

# Figür boyutunu ayarlayın
plt.subplots(figsize=(25, 15))

# Kelime bulutunu oluşturun
wordcloud = WordCloud(
    background_color="white",
    width=1920,
    height=1080
).generate(" ".join(cleaned_director_data))  # Temizlenmiş verileri kullan

# Kelime bulutunu görselleştir
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")  # Eksenleri kapat
plt.savefig("director.png")  # Görseli kaydet
plt.show()  # Görseli göster

